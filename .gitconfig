[init]
	defaultBranch = main
[user]
	name = Liam Woodleigh-Hardinge
	email = liam.woodleigh@gmail.com
    signingkey = BF36F6F4D88647AA
[push]
	autoSetupRebase = always
	autoSetupRemote = true
    updateRefs = true
	default = simple
    useForceIfIncludes = true
[fetch]
    prune = true
[pull]
    rebase = true
[rebase]
    autosquash = true
    autostash = true
[branch]
    autosetuprebase = always
[commit]
    ; gpgsign = true
    verbose = true
[color]
	ui = true
[rerere]
	enabled = true
    autoupdate = true
[help]
	autocorrect = 1
[credential]
	helper = store
	helper =
	helper = /usr/local/share/gcm-core/git-credential-manager
[credential "https://dev.azure.com"]
	useHttpPath = true
[core]
	autocrlf = input
	safecrlf = true
    editor = nvim
    pager = delta
[include]
    path = ~/.gitconfig-work
[alias]
    co = checkout
    fomo = !git fetch origin main && git rebase origin/main --autostash
    br = branch
    ci = commit
    st = status
    last = log -1 HEAD
    graph = log --all --decorate --oneline --graph
    accept-ours = "!f() { git checkout --ours -- \"${@:-.}\"; git add -u \"${@:-.}\"; }; f"
    accept-theirs = "!f() { git checkout --theirs -- \"${@:-.}\"; git add -u \"${@:-.}\"; }; f"
    recent = !git fetch origin && git for-each-ref --sort=-committerdate 'refs/heads' 'refs/remotes/origin' --format='%(committerdate:short) %(refname:short) (%(authorname))' --count 10
    recent-remote = !git fetch origin && git for-each-ref --sort=-committerdate refs/remotes/origin --format='%(committerdate:short) %(refname:short) (%(authorname))' --count 10
[format]
    pretty = "%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset"

[interactive]
    diffFilter = delta --color-only

[delta]
    navigate = true    # use n and N to move between diff sections
    side-by-side = false
    line-numbers = false

    # delta detects terminal colors automatically; set one of these to disable auto-detection
    dark = true

[merge]
    conflictstyle = diff3

[diff]
    colorMoved = default
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
